version: '3.8'

services:
  # Backend UI
  backend:
    build: ./backend
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - db_init
    networks:
      - magi_network
  
  # Backend database initialization
  db_init:
    build: ./backend
    command: bash /app/scripts/init_db.sh
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - magi_network

  gateway_consumer:
    build: ./backend
    command: python manage.py run_gateway_consumer
    env_file:
      - .env
    depends_on:
      - db_init
      - redis
      - gateway
    networks:
      - magi_network

  celery_worker:
    build: ./backend
    command: celery -A config worker -l INFO
    env_file:
      - .env
    depends_on:
      - backend
      - redis
      - db_init
    networks:
      - magi_network

  celery_beat:
    build: ./backend
    command: celery -A config beat -l INFO
    env_file:
      - .env
    depends_on:
      - backend
      - redis
      - db_init
    networks:
      - magi_network

  gateway:
    build: ./gateway
    command: --host 0.0.0.0 --port 8001
    volumes:
      - ./gateway:/app
    expose:
      - "8001"
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - magi_network


  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=magisys
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    # ports:
      # - "5432:5432"
    networks:
      - magi_network

  redis:
    image: redis:7
    # ports:
      # - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - magi_network

  frontend:
    build: ./frontend
    expose:
      - "3000"
    env_file:
      - .env
    networks:
      - magi_network

  nginx:
    image: nginx:alpine
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - backend
      - gateway
      - frontend
    networks:
      - magi_network

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  magi_network:
    # driver: bridge
